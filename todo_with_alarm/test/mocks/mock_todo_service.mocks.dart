// Mocks generated by Mockito 5.4.4 from annotations
// in todo_with_alarm/test/mocks/mock_todo_service.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:todo_with_alarm/models/todo.dart' as _i4;
import 'package:todo_with_alarm/services/todo_service.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [TodoService].
///
/// See the documentation for Mockito's code generation for more information.
class MockTodoService extends _i1.Mock implements _i2.TodoService {
  MockTodoService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> saveTodoList(List<_i4.Todo>? todos) => (super.noSuchMethod(
        Invocation.method(
          #saveTodoList,
          [todos],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<List<_i4.Todo>> loadTodoList() => (super.noSuchMethod(
        Invocation.method(
          #loadTodoList,
          [],
        ),
        returnValue: _i3.Future<List<_i4.Todo>>.value(<_i4.Todo>[]),
      ) as _i3.Future<List<_i4.Todo>>);

  @override
  _i3.Future<void> updateTodo(_i4.Todo? updatedTodo) => (super.noSuchMethod(
        Invocation.method(
          #updateTodo,
          [updatedTodo],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> updateTodoStatus(
    String? todoId,
    double? status,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateTodoStatus,
          [
            todoId,
            status,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> deleteTodoById(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteTodoById,
          [id],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> updateTodoDates(_i4.Todo? todo) => (super.noSuchMethod(
        Invocation.method(
          #updateTodoDates,
          [todo],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> addTodo(_i4.Todo? todo) => (super.noSuchMethod(
        Invocation.method(
          #addTodo,
          [todo],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i4.Todo? getTodoById(String? id) => (super.noSuchMethod(Invocation.method(
        #getTodoById,
        [id],
      )) as _i4.Todo?);

  @override
  _i3.Future<void> closeBox() => (super.noSuchMethod(
        Invocation.method(
          #closeBox,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<List<_i4.Todo>> getUnsyncedTodos() => (super.noSuchMethod(
        Invocation.method(
          #getUnsyncedTodos,
          [],
        ),
        returnValue: _i3.Future<List<_i4.Todo>>.value(<_i4.Todo>[]),
      ) as _i3.Future<List<_i4.Todo>>);

  @override
  _i3.Future<int> getUnsyncedTodosCount() => (super.noSuchMethod(
        Invocation.method(
          #getUnsyncedTodosCount,
          [],
        ),
        returnValue: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);

  @override
  _i3.Future<void> syncTodo(_i4.Todo? todo) => (super.noSuchMethod(
        Invocation.method(
          #syncTodo,
          [todo],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
